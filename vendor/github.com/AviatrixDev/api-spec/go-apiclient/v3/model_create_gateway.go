/*
api spec

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_client

import (
	"encoding/json"
)

// CreateGateway struct for CreateGateway
type CreateGateway struct {
	CloudProvider *CloudProviders `json:"cloud_provider,omitempty"`
	Name *string `json:"name,omitempty"`
	AccountName *string `json:"account_name,omitempty"`
	InstanceSize *AwsInstanceSizes `json:"instance_size,omitempty"`
	Region *AwsRegions `json:"region,omitempty"`
	VpcId *string `json:"vpc_id,omitempty"`
	PublicSubnetId *string `json:"public_subnet_id,omitempty"`
	IsNatEnabled *bool `json:"is_nat_enabled,omitempty"`
	IsDesignated *bool `json:"is_designated,omitempty"`
	ShouldAllocateNewEip *bool `json:"should_allocate_new_eip,omitempty"`
	IsInsaneModeEnabled *bool `json:"is_insane_mode_enabled,omitempty"`
	IsVpnEnabled *bool `json:"is_vpn_enabled,omitempty"`
}

// NewCreateGateway instantiates a new CreateGateway object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateGateway() *CreateGateway {
	this := CreateGateway{}
	var isNatEnabled bool = false
	this.IsNatEnabled = &isNatEnabled
	var isDesignated bool = false
	this.IsDesignated = &isDesignated
	var shouldAllocateNewEip bool = false
	this.ShouldAllocateNewEip = &shouldAllocateNewEip
	var isInsaneModeEnabled bool = false
	this.IsInsaneModeEnabled = &isInsaneModeEnabled
	var isVpnEnabled bool = false
	this.IsVpnEnabled = &isVpnEnabled
	return &this
}

// NewCreateGatewayWithDefaults instantiates a new CreateGateway object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateGatewayWithDefaults() *CreateGateway {
	this := CreateGateway{}
	var isNatEnabled bool = false
	this.IsNatEnabled = &isNatEnabled
	var isDesignated bool = false
	this.IsDesignated = &isDesignated
	var shouldAllocateNewEip bool = false
	this.ShouldAllocateNewEip = &shouldAllocateNewEip
	var isInsaneModeEnabled bool = false
	this.IsInsaneModeEnabled = &isInsaneModeEnabled
	var isVpnEnabled bool = false
	this.IsVpnEnabled = &isVpnEnabled
	return &this
}

// GetCloudProvider returns the CloudProvider field value if set, zero value otherwise.
func (o *CreateGateway) GetCloudProvider() CloudProviders {
	if o == nil || o.CloudProvider == nil {
		var ret CloudProviders
		return ret
	}
	return *o.CloudProvider
}

// GetCloudProviderOk returns a tuple with the CloudProvider field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateGateway) GetCloudProviderOk() (*CloudProviders, bool) {
	if o == nil || o.CloudProvider == nil {
		return nil, false
	}
	return o.CloudProvider, true
}

// HasCloudProvider returns a boolean if a field has been set.
func (o *CreateGateway) HasCloudProvider() bool {
	if o != nil && o.CloudProvider != nil {
		return true
	}

	return false
}

// SetCloudProvider gets a reference to the given CloudProviders and assigns it to the CloudProvider field.
func (o *CreateGateway) SetCloudProvider(v CloudProviders) {
	o.CloudProvider = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CreateGateway) GetName() string {
	if o == nil || o.Name == nil {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateGateway) GetNameOk() (*string, bool) {
	if o == nil || o.Name == nil {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CreateGateway) HasName() bool {
	if o != nil && o.Name != nil {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CreateGateway) SetName(v string) {
	o.Name = &v
}

// GetAccountName returns the AccountName field value if set, zero value otherwise.
func (o *CreateGateway) GetAccountName() string {
	if o == nil || o.AccountName == nil {
		var ret string
		return ret
	}
	return *o.AccountName
}

// GetAccountNameOk returns a tuple with the AccountName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateGateway) GetAccountNameOk() (*string, bool) {
	if o == nil || o.AccountName == nil {
		return nil, false
	}
	return o.AccountName, true
}

// HasAccountName returns a boolean if a field has been set.
func (o *CreateGateway) HasAccountName() bool {
	if o != nil && o.AccountName != nil {
		return true
	}

	return false
}

// SetAccountName gets a reference to the given string and assigns it to the AccountName field.
func (o *CreateGateway) SetAccountName(v string) {
	o.AccountName = &v
}

// GetInstanceSize returns the InstanceSize field value if set, zero value otherwise.
func (o *CreateGateway) GetInstanceSize() AwsInstanceSizes {
	if o == nil || o.InstanceSize == nil {
		var ret AwsInstanceSizes
		return ret
	}
	return *o.InstanceSize
}

// GetInstanceSizeOk returns a tuple with the InstanceSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateGateway) GetInstanceSizeOk() (*AwsInstanceSizes, bool) {
	if o == nil || o.InstanceSize == nil {
		return nil, false
	}
	return o.InstanceSize, true
}

// HasInstanceSize returns a boolean if a field has been set.
func (o *CreateGateway) HasInstanceSize() bool {
	if o != nil && o.InstanceSize != nil {
		return true
	}

	return false
}

// SetInstanceSize gets a reference to the given AwsInstanceSizes and assigns it to the InstanceSize field.
func (o *CreateGateway) SetInstanceSize(v AwsInstanceSizes) {
	o.InstanceSize = &v
}

// GetRegion returns the Region field value if set, zero value otherwise.
func (o *CreateGateway) GetRegion() AwsRegions {
	if o == nil || o.Region == nil {
		var ret AwsRegions
		return ret
	}
	return *o.Region
}

// GetRegionOk returns a tuple with the Region field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateGateway) GetRegionOk() (*AwsRegions, bool) {
	if o == nil || o.Region == nil {
		return nil, false
	}
	return o.Region, true
}

// HasRegion returns a boolean if a field has been set.
func (o *CreateGateway) HasRegion() bool {
	if o != nil && o.Region != nil {
		return true
	}

	return false
}

// SetRegion gets a reference to the given AwsRegions and assigns it to the Region field.
func (o *CreateGateway) SetRegion(v AwsRegions) {
	o.Region = &v
}

// GetVpcId returns the VpcId field value if set, zero value otherwise.
func (o *CreateGateway) GetVpcId() string {
	if o == nil || o.VpcId == nil {
		var ret string
		return ret
	}
	return *o.VpcId
}

// GetVpcIdOk returns a tuple with the VpcId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateGateway) GetVpcIdOk() (*string, bool) {
	if o == nil || o.VpcId == nil {
		return nil, false
	}
	return o.VpcId, true
}

// HasVpcId returns a boolean if a field has been set.
func (o *CreateGateway) HasVpcId() bool {
	if o != nil && o.VpcId != nil {
		return true
	}

	return false
}

// SetVpcId gets a reference to the given string and assigns it to the VpcId field.
func (o *CreateGateway) SetVpcId(v string) {
	o.VpcId = &v
}

// GetPublicSubnetId returns the PublicSubnetId field value if set, zero value otherwise.
func (o *CreateGateway) GetPublicSubnetId() string {
	if o == nil || o.PublicSubnetId == nil {
		var ret string
		return ret
	}
	return *o.PublicSubnetId
}

// GetPublicSubnetIdOk returns a tuple with the PublicSubnetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateGateway) GetPublicSubnetIdOk() (*string, bool) {
	if o == nil || o.PublicSubnetId == nil {
		return nil, false
	}
	return o.PublicSubnetId, true
}

// HasPublicSubnetId returns a boolean if a field has been set.
func (o *CreateGateway) HasPublicSubnetId() bool {
	if o != nil && o.PublicSubnetId != nil {
		return true
	}

	return false
}

// SetPublicSubnetId gets a reference to the given string and assigns it to the PublicSubnetId field.
func (o *CreateGateway) SetPublicSubnetId(v string) {
	o.PublicSubnetId = &v
}

// GetIsNatEnabled returns the IsNatEnabled field value if set, zero value otherwise.
func (o *CreateGateway) GetIsNatEnabled() bool {
	if o == nil || o.IsNatEnabled == nil {
		var ret bool
		return ret
	}
	return *o.IsNatEnabled
}

// GetIsNatEnabledOk returns a tuple with the IsNatEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateGateway) GetIsNatEnabledOk() (*bool, bool) {
	if o == nil || o.IsNatEnabled == nil {
		return nil, false
	}
	return o.IsNatEnabled, true
}

// HasIsNatEnabled returns a boolean if a field has been set.
func (o *CreateGateway) HasIsNatEnabled() bool {
	if o != nil && o.IsNatEnabled != nil {
		return true
	}

	return false
}

// SetIsNatEnabled gets a reference to the given bool and assigns it to the IsNatEnabled field.
func (o *CreateGateway) SetIsNatEnabled(v bool) {
	o.IsNatEnabled = &v
}

// GetIsDesignated returns the IsDesignated field value if set, zero value otherwise.
func (o *CreateGateway) GetIsDesignated() bool {
	if o == nil || o.IsDesignated == nil {
		var ret bool
		return ret
	}
	return *o.IsDesignated
}

// GetIsDesignatedOk returns a tuple with the IsDesignated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateGateway) GetIsDesignatedOk() (*bool, bool) {
	if o == nil || o.IsDesignated == nil {
		return nil, false
	}
	return o.IsDesignated, true
}

// HasIsDesignated returns a boolean if a field has been set.
func (o *CreateGateway) HasIsDesignated() bool {
	if o != nil && o.IsDesignated != nil {
		return true
	}

	return false
}

// SetIsDesignated gets a reference to the given bool and assigns it to the IsDesignated field.
func (o *CreateGateway) SetIsDesignated(v bool) {
	o.IsDesignated = &v
}

// GetShouldAllocateNewEip returns the ShouldAllocateNewEip field value if set, zero value otherwise.
func (o *CreateGateway) GetShouldAllocateNewEip() bool {
	if o == nil || o.ShouldAllocateNewEip == nil {
		var ret bool
		return ret
	}
	return *o.ShouldAllocateNewEip
}

// GetShouldAllocateNewEipOk returns a tuple with the ShouldAllocateNewEip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateGateway) GetShouldAllocateNewEipOk() (*bool, bool) {
	if o == nil || o.ShouldAllocateNewEip == nil {
		return nil, false
	}
	return o.ShouldAllocateNewEip, true
}

// HasShouldAllocateNewEip returns a boolean if a field has been set.
func (o *CreateGateway) HasShouldAllocateNewEip() bool {
	if o != nil && o.ShouldAllocateNewEip != nil {
		return true
	}

	return false
}

// SetShouldAllocateNewEip gets a reference to the given bool and assigns it to the ShouldAllocateNewEip field.
func (o *CreateGateway) SetShouldAllocateNewEip(v bool) {
	o.ShouldAllocateNewEip = &v
}

// GetIsInsaneModeEnabled returns the IsInsaneModeEnabled field value if set, zero value otherwise.
func (o *CreateGateway) GetIsInsaneModeEnabled() bool {
	if o == nil || o.IsInsaneModeEnabled == nil {
		var ret bool
		return ret
	}
	return *o.IsInsaneModeEnabled
}

// GetIsInsaneModeEnabledOk returns a tuple with the IsInsaneModeEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateGateway) GetIsInsaneModeEnabledOk() (*bool, bool) {
	if o == nil || o.IsInsaneModeEnabled == nil {
		return nil, false
	}
	return o.IsInsaneModeEnabled, true
}

// HasIsInsaneModeEnabled returns a boolean if a field has been set.
func (o *CreateGateway) HasIsInsaneModeEnabled() bool {
	if o != nil && o.IsInsaneModeEnabled != nil {
		return true
	}

	return false
}

// SetIsInsaneModeEnabled gets a reference to the given bool and assigns it to the IsInsaneModeEnabled field.
func (o *CreateGateway) SetIsInsaneModeEnabled(v bool) {
	o.IsInsaneModeEnabled = &v
}

// GetIsVpnEnabled returns the IsVpnEnabled field value if set, zero value otherwise.
func (o *CreateGateway) GetIsVpnEnabled() bool {
	if o == nil || o.IsVpnEnabled == nil {
		var ret bool
		return ret
	}
	return *o.IsVpnEnabled
}

// GetIsVpnEnabledOk returns a tuple with the IsVpnEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateGateway) GetIsVpnEnabledOk() (*bool, bool) {
	if o == nil || o.IsVpnEnabled == nil {
		return nil, false
	}
	return o.IsVpnEnabled, true
}

// HasIsVpnEnabled returns a boolean if a field has been set.
func (o *CreateGateway) HasIsVpnEnabled() bool {
	if o != nil && o.IsVpnEnabled != nil {
		return true
	}

	return false
}

// SetIsVpnEnabled gets a reference to the given bool and assigns it to the IsVpnEnabled field.
func (o *CreateGateway) SetIsVpnEnabled(v bool) {
	o.IsVpnEnabled = &v
}

func (o CreateGateway) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.CloudProvider != nil {
		toSerialize["cloud_provider"] = o.CloudProvider
	}
	if o.Name != nil {
		toSerialize["name"] = o.Name
	}
	if o.AccountName != nil {
		toSerialize["account_name"] = o.AccountName
	}
	if o.InstanceSize != nil {
		toSerialize["instance_size"] = o.InstanceSize
	}
	if o.Region != nil {
		toSerialize["region"] = o.Region
	}
	if o.VpcId != nil {
		toSerialize["vpc_id"] = o.VpcId
	}
	if o.PublicSubnetId != nil {
		toSerialize["public_subnet_id"] = o.PublicSubnetId
	}
	if o.IsNatEnabled != nil {
		toSerialize["is_nat_enabled"] = o.IsNatEnabled
	}
	if o.IsDesignated != nil {
		toSerialize["is_designated"] = o.IsDesignated
	}
	if o.ShouldAllocateNewEip != nil {
		toSerialize["should_allocate_new_eip"] = o.ShouldAllocateNewEip
	}
	if o.IsInsaneModeEnabled != nil {
		toSerialize["is_insane_mode_enabled"] = o.IsInsaneModeEnabled
	}
	if o.IsVpnEnabled != nil {
		toSerialize["is_vpn_enabled"] = o.IsVpnEnabled
	}
	return json.Marshal(toSerialize)
}

type NullableCreateGateway struct {
	value *CreateGateway
	isSet bool
}

func (v NullableCreateGateway) Get() *CreateGateway {
	return v.value
}

func (v *NullableCreateGateway) Set(val *CreateGateway) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateGateway) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateGateway) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateGateway(val *CreateGateway) *NullableCreateGateway {
	return &NullableCreateGateway{value: val, isSet: true}
}

func (v NullableCreateGateway) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateGateway) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


