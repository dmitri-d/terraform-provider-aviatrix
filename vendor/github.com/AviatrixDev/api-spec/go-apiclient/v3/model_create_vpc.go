/*
api spec

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_client

import (
	"encoding/json"
)

// CreateVpc struct for CreateVpc
type CreateVpc struct {
	AccountName string `json:"account_name"`
	Cidr string `json:"cidr"`
	CloudProvider CloudProviders `json:"cloud_provider"`
	IsEnableNativeGwlb *bool `json:"is_enable_native_gwlb,omitempty"`
	IsEnablePrivateOobSubnet *bool `json:"is_enable_private_oob_subnet,omitempty"`
	IsTransitVpc *bool `json:"is_transit_vpc,omitempty"`
	IsTransitFirenet *bool `json:"is_transit_firenet,omitempty"`
	Name string `json:"name"`
	Region AwsRegions `json:"region"`
	SubnetSize *int32 `json:"subnet_size,omitempty"`
	NumOfSubnetPairs *int32 `json:"num_of_subnet_pairs,omitempty"`
}

// NewCreateVpc instantiates a new CreateVpc object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateVpc(accountName string, cidr string, cloudProvider CloudProviders, name string, region AwsRegions) *CreateVpc {
	this := CreateVpc{}
	this.AccountName = accountName
	this.Cidr = cidr
	this.CloudProvider = cloudProvider
	var isEnableNativeGwlb bool = false
	this.IsEnableNativeGwlb = &isEnableNativeGwlb
	var isEnablePrivateOobSubnet bool = false
	this.IsEnablePrivateOobSubnet = &isEnablePrivateOobSubnet
	var isTransitVpc bool = false
	this.IsTransitVpc = &isTransitVpc
	var isTransitFirenet bool = false
	this.IsTransitFirenet = &isTransitFirenet
	this.Name = name
	this.Region = region
	var subnetSize int32 = 0
	this.SubnetSize = &subnetSize
	var numOfSubnetPairs int32 = 0
	this.NumOfSubnetPairs = &numOfSubnetPairs
	return &this
}

// NewCreateVpcWithDefaults instantiates a new CreateVpc object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateVpcWithDefaults() *CreateVpc {
	this := CreateVpc{}
	var isEnableNativeGwlb bool = false
	this.IsEnableNativeGwlb = &isEnableNativeGwlb
	var isEnablePrivateOobSubnet bool = false
	this.IsEnablePrivateOobSubnet = &isEnablePrivateOobSubnet
	var isTransitVpc bool = false
	this.IsTransitVpc = &isTransitVpc
	var isTransitFirenet bool = false
	this.IsTransitFirenet = &isTransitFirenet
	var subnetSize int32 = 0
	this.SubnetSize = &subnetSize
	var numOfSubnetPairs int32 = 0
	this.NumOfSubnetPairs = &numOfSubnetPairs
	return &this
}

// GetAccountName returns the AccountName field value
func (o *CreateVpc) GetAccountName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AccountName
}

// GetAccountNameOk returns a tuple with the AccountName field value
// and a boolean to check if the value has been set.
func (o *CreateVpc) GetAccountNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AccountName, true
}

// SetAccountName sets field value
func (o *CreateVpc) SetAccountName(v string) {
	o.AccountName = v
}

// GetCidr returns the Cidr field value
func (o *CreateVpc) GetCidr() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Cidr
}

// GetCidrOk returns a tuple with the Cidr field value
// and a boolean to check if the value has been set.
func (o *CreateVpc) GetCidrOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Cidr, true
}

// SetCidr sets field value
func (o *CreateVpc) SetCidr(v string) {
	o.Cidr = v
}

// GetCloudProvider returns the CloudProvider field value
func (o *CreateVpc) GetCloudProvider() CloudProviders {
	if o == nil {
		var ret CloudProviders
		return ret
	}

	return o.CloudProvider
}

// GetCloudProviderOk returns a tuple with the CloudProvider field value
// and a boolean to check if the value has been set.
func (o *CreateVpc) GetCloudProviderOk() (*CloudProviders, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CloudProvider, true
}

// SetCloudProvider sets field value
func (o *CreateVpc) SetCloudProvider(v CloudProviders) {
	o.CloudProvider = v
}

// GetIsEnableNativeGwlb returns the IsEnableNativeGwlb field value if set, zero value otherwise.
func (o *CreateVpc) GetIsEnableNativeGwlb() bool {
	if o == nil || o.IsEnableNativeGwlb == nil {
		var ret bool
		return ret
	}
	return *o.IsEnableNativeGwlb
}

// GetIsEnableNativeGwlbOk returns a tuple with the IsEnableNativeGwlb field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVpc) GetIsEnableNativeGwlbOk() (*bool, bool) {
	if o == nil || o.IsEnableNativeGwlb == nil {
		return nil, false
	}
	return o.IsEnableNativeGwlb, true
}

// HasIsEnableNativeGwlb returns a boolean if a field has been set.
func (o *CreateVpc) HasIsEnableNativeGwlb() bool {
	if o != nil && o.IsEnableNativeGwlb != nil {
		return true
	}

	return false
}

// SetIsEnableNativeGwlb gets a reference to the given bool and assigns it to the IsEnableNativeGwlb field.
func (o *CreateVpc) SetIsEnableNativeGwlb(v bool) {
	o.IsEnableNativeGwlb = &v
}

// GetIsEnablePrivateOobSubnet returns the IsEnablePrivateOobSubnet field value if set, zero value otherwise.
func (o *CreateVpc) GetIsEnablePrivateOobSubnet() bool {
	if o == nil || o.IsEnablePrivateOobSubnet == nil {
		var ret bool
		return ret
	}
	return *o.IsEnablePrivateOobSubnet
}

// GetIsEnablePrivateOobSubnetOk returns a tuple with the IsEnablePrivateOobSubnet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVpc) GetIsEnablePrivateOobSubnetOk() (*bool, bool) {
	if o == nil || o.IsEnablePrivateOobSubnet == nil {
		return nil, false
	}
	return o.IsEnablePrivateOobSubnet, true
}

// HasIsEnablePrivateOobSubnet returns a boolean if a field has been set.
func (o *CreateVpc) HasIsEnablePrivateOobSubnet() bool {
	if o != nil && o.IsEnablePrivateOobSubnet != nil {
		return true
	}

	return false
}

// SetIsEnablePrivateOobSubnet gets a reference to the given bool and assigns it to the IsEnablePrivateOobSubnet field.
func (o *CreateVpc) SetIsEnablePrivateOobSubnet(v bool) {
	o.IsEnablePrivateOobSubnet = &v
}

// GetIsTransitVpc returns the IsTransitVpc field value if set, zero value otherwise.
func (o *CreateVpc) GetIsTransitVpc() bool {
	if o == nil || o.IsTransitVpc == nil {
		var ret bool
		return ret
	}
	return *o.IsTransitVpc
}

// GetIsTransitVpcOk returns a tuple with the IsTransitVpc field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVpc) GetIsTransitVpcOk() (*bool, bool) {
	if o == nil || o.IsTransitVpc == nil {
		return nil, false
	}
	return o.IsTransitVpc, true
}

// HasIsTransitVpc returns a boolean if a field has been set.
func (o *CreateVpc) HasIsTransitVpc() bool {
	if o != nil && o.IsTransitVpc != nil {
		return true
	}

	return false
}

// SetIsTransitVpc gets a reference to the given bool and assigns it to the IsTransitVpc field.
func (o *CreateVpc) SetIsTransitVpc(v bool) {
	o.IsTransitVpc = &v
}

// GetIsTransitFirenet returns the IsTransitFirenet field value if set, zero value otherwise.
func (o *CreateVpc) GetIsTransitFirenet() bool {
	if o == nil || o.IsTransitFirenet == nil {
		var ret bool
		return ret
	}
	return *o.IsTransitFirenet
}

// GetIsTransitFirenetOk returns a tuple with the IsTransitFirenet field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVpc) GetIsTransitFirenetOk() (*bool, bool) {
	if o == nil || o.IsTransitFirenet == nil {
		return nil, false
	}
	return o.IsTransitFirenet, true
}

// HasIsTransitFirenet returns a boolean if a field has been set.
func (o *CreateVpc) HasIsTransitFirenet() bool {
	if o != nil && o.IsTransitFirenet != nil {
		return true
	}

	return false
}

// SetIsTransitFirenet gets a reference to the given bool and assigns it to the IsTransitFirenet field.
func (o *CreateVpc) SetIsTransitFirenet(v bool) {
	o.IsTransitFirenet = &v
}

// GetName returns the Name field value
func (o *CreateVpc) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CreateVpc) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CreateVpc) SetName(v string) {
	o.Name = v
}

// GetRegion returns the Region field value
func (o *CreateVpc) GetRegion() AwsRegions {
	if o == nil {
		var ret AwsRegions
		return ret
	}

	return o.Region
}

// GetRegionOk returns a tuple with the Region field value
// and a boolean to check if the value has been set.
func (o *CreateVpc) GetRegionOk() (*AwsRegions, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Region, true
}

// SetRegion sets field value
func (o *CreateVpc) SetRegion(v AwsRegions) {
	o.Region = v
}

// GetSubnetSize returns the SubnetSize field value if set, zero value otherwise.
func (o *CreateVpc) GetSubnetSize() int32 {
	if o == nil || o.SubnetSize == nil {
		var ret int32
		return ret
	}
	return *o.SubnetSize
}

// GetSubnetSizeOk returns a tuple with the SubnetSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVpc) GetSubnetSizeOk() (*int32, bool) {
	if o == nil || o.SubnetSize == nil {
		return nil, false
	}
	return o.SubnetSize, true
}

// HasSubnetSize returns a boolean if a field has been set.
func (o *CreateVpc) HasSubnetSize() bool {
	if o != nil && o.SubnetSize != nil {
		return true
	}

	return false
}

// SetSubnetSize gets a reference to the given int32 and assigns it to the SubnetSize field.
func (o *CreateVpc) SetSubnetSize(v int32) {
	o.SubnetSize = &v
}

// GetNumOfSubnetPairs returns the NumOfSubnetPairs field value if set, zero value otherwise.
func (o *CreateVpc) GetNumOfSubnetPairs() int32 {
	if o == nil || o.NumOfSubnetPairs == nil {
		var ret int32
		return ret
	}
	return *o.NumOfSubnetPairs
}

// GetNumOfSubnetPairsOk returns a tuple with the NumOfSubnetPairs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateVpc) GetNumOfSubnetPairsOk() (*int32, bool) {
	if o == nil || o.NumOfSubnetPairs == nil {
		return nil, false
	}
	return o.NumOfSubnetPairs, true
}

// HasNumOfSubnetPairs returns a boolean if a field has been set.
func (o *CreateVpc) HasNumOfSubnetPairs() bool {
	if o != nil && o.NumOfSubnetPairs != nil {
		return true
	}

	return false
}

// SetNumOfSubnetPairs gets a reference to the given int32 and assigns it to the NumOfSubnetPairs field.
func (o *CreateVpc) SetNumOfSubnetPairs(v int32) {
	o.NumOfSubnetPairs = &v
}

func (o CreateVpc) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["account_name"] = o.AccountName
	}
	if true {
		toSerialize["cidr"] = o.Cidr
	}
	if true {
		toSerialize["cloud_provider"] = o.CloudProvider
	}
	if o.IsEnableNativeGwlb != nil {
		toSerialize["is_enable_native_gwlb"] = o.IsEnableNativeGwlb
	}
	if o.IsEnablePrivateOobSubnet != nil {
		toSerialize["is_enable_private_oob_subnet"] = o.IsEnablePrivateOobSubnet
	}
	if o.IsTransitVpc != nil {
		toSerialize["is_transit_vpc"] = o.IsTransitVpc
	}
	if o.IsTransitFirenet != nil {
		toSerialize["is_transit_firenet"] = o.IsTransitFirenet
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["region"] = o.Region
	}
	if o.SubnetSize != nil {
		toSerialize["subnet_size"] = o.SubnetSize
	}
	if o.NumOfSubnetPairs != nil {
		toSerialize["num_of_subnet_pairs"] = o.NumOfSubnetPairs
	}
	return json.Marshal(toSerialize)
}

type NullableCreateVpc struct {
	value *CreateVpc
	isSet bool
}

func (v NullableCreateVpc) Get() *CreateVpc {
	return v.value
}

func (v *NullableCreateVpc) Set(val *CreateVpc) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateVpc) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateVpc) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateVpc(val *CreateVpc) *NullableCreateVpc {
	return &NullableCreateVpc{value: val, isSet: true}
}

func (v NullableCreateVpc) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateVpc) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


