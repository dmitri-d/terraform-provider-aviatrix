/*
api spec

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package api_client

import (
	"encoding/json"
	"fmt"
)

// GatewayStates the model 'GatewayStates'
type GatewayStates string

// List of gateway_states
const (
	WAITING GatewayStates = "waiting"
	UP GatewayStates = "up"
)

// All allowed values of GatewayStates enum
var AllowedGatewayStatesEnumValues = []GatewayStates{
	"waiting",
	"up",
}

func (v *GatewayStates) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := GatewayStates(value)
	for _, existing := range AllowedGatewayStatesEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid GatewayStates", value)
}

// NewGatewayStatesFromValue returns a pointer to a valid GatewayStates
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewGatewayStatesFromValue(v string) (*GatewayStates, error) {
	ev := GatewayStates(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for GatewayStates: valid values are %v", v, AllowedGatewayStatesEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v GatewayStates) IsValid() bool {
	for _, existing := range AllowedGatewayStatesEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to gateway_states value
func (v GatewayStates) Ptr() *GatewayStates {
	return &v
}

type NullableGatewayStates struct {
	value *GatewayStates
	isSet bool
}

func (v NullableGatewayStates) Get() *GatewayStates {
	return v.value
}

func (v *NullableGatewayStates) Set(val *GatewayStates) {
	v.value = val
	v.isSet = true
}

func (v NullableGatewayStates) IsSet() bool {
	return v.isSet
}

func (v *NullableGatewayStates) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGatewayStates(val *GatewayStates) *NullableGatewayStates {
	return &NullableGatewayStates{value: val, isSet: true}
}

func (v NullableGatewayStates) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGatewayStates) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

